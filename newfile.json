{
  "description": "Manage photos, videos, and albums in Google Photos ",
  "schemas": {
    "BatchRemoveMediaItemsFromAlbumResponse": {
      "type": "object",
      "id": "BatchRemoveMediaItemsFromAlbumResponse",
      "description": "Response for successfully removing all specified media items from the album.",
      "properties": {}
    },
    "BatchRemoveMediaItemsFromAlbumRequest": {
      "id": "BatchRemoveMediaItemsFromAlbumRequest",
      "description": "Request to remove a list of media items from an album.",
      "type": "object",
      "properties": {
        "mediaItemIds": {
          "type": "array",
          "description": "Required. Identifiers of the MediaItems to be removed. Must not contain repeated identifiers and cannot be empty. The maximum number of media items that can be removed in one call is 50.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Album": {
      "description": "Representation of an album in Google Photos. Albums are containers for media items. If an album has been shared by the application, it contains an extra `shareInfo` property.",
      "id": "Album",
      "type": "object",
      "properties": {
        "coverPhotoMediaItemId": {
          "description": "Identifier for the media item associated with the cover photo.",
          "type": "string"
        },
        "productUrl": {
          "type": "string",
          "description": "[Output only] Google Photos URL for the album. The user needs to be signed in to their Google Photos account to access this link."
        },
        "shareInfo": {
          "description": "[Output only] Information related to shared albums. This field is only populated if the album is a shared album, the developer created the album and the user has granted the `photoslibrary.sharing` scope.",
          "$ref": "ShareInfo"
        },
        "coverPhotoBaseUrl": {
          "type": "string",
          "description": "[Output only] A URL to the cover photo's bytes. This shouldn't be used as is. Parameters should be appended to this URL before use. See the [developer documentation](https://developers.google.com/photos/library/guides/access-media-items#base-urls) for a complete list of supported parameters. For example, `'=w2048-h1024'` sets the dimensions of the cover photo to have a width of 2048 px and height of 1024 px."
        },
        "id": {
          "type": "string",
          "description": "Identifier for the album. This is a persistent identifier that can be used between sessions to identify this album."
        },
        "isWriteable": {
          "type": "boolean",
          "description": "[Output only] True if you can create media items in this album. This field is based on the scopes granted and permissions of the album. If the scopes are changed or permissions of the album are changed, this field is updated."
        },
        "mediaItemsCount": {
          "description": "[Output only] The number of media items in the album.",
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "Name of the album displayed to the user in their Google Photos account. This string shouldn't be more than 500 characters."
        }
      }
    },
    "NewMediaItemResult": {
      "properties": {
        "mediaItem": {
          "description": "Media item created with the upload token. It's populated if no errors occurred and the media item was created successfully.",
          "$ref": "MediaItem"
        },
        "status": {
          "description": "If an error occurred during the creation of this media item, this field is populated with information related to the error. For details regarding this field, see Status.",
          "$ref": "Status"
        },
        "uploadToken": {
          "description": "The upload token used to create this new (simple) media item. Only populated if the media item is simple and required a single upload token.",
          "type": "string"
        }
      },
      "id": "NewMediaItemResult",
      "type": "object",
      "description": "Result of creating a new media item."
    },
    "MediaItemResult": {
      "id": "MediaItemResult",
      "properties": {
        "status": {
          "description": "If an error occurred while accessing this media item, this field is populated with information related to the error. For details regarding this field, see Status.",
          "$ref": "Status"
        },
        "mediaItem": {
          "$ref": "MediaItem",
          "description": "Media item retrieved from the user's library. It's populated if no errors occurred and the media item was fetched successfully."
        }
      },
      "description": "Result of retrieving a media item.",
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "SearchMediaItemsRequest": {
      "properties": {
        "pageToken": {
          "description": "A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `searchMediaItems` request.",
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "description": "Maximum number of media items to return in the response. Fewer media items might be returned than the specified number. The default `pageSize` is 25, the maximum is 100.",
          "format": "int32"
        },
        "orderBy": {
          "description": "An optional field to specify the sort order of the search results. The `orderBy` field only works when a dateFilter is used. When this field is not specified, results are displayed newest first, oldest last by their creationTime. Providing `MediaMetadata.creation_time` displays search results in the opposite order, oldest first then newest last. To display results newest first then oldest last, include the `desc` argument as follows: `MediaMetadata.creation_time desc`. The only additional filters that can be used with this parameter are includeArchivedMedia and excludeNonAppCreatedData. No other filters are supported.",
          "type": "string"
        },
        "filters": {
          "description": "Filters to apply to the request. Can't be set in conjunction with an `albumId`.",
          "$ref": "Filters"
        },
        "albumId": {
          "type": "string",
          "description": "Identifier of an album. If populated, lists all media items in specified album. Can't set in conjunction with any filters."
        }
      },
      "id": "SearchMediaItemsRequest",
      "type": "object",
      "description": "Request to search for media items in a user's library. If the album id is specified, this call will return the list of media items in the album. If neither filters nor album id are specified, this call will return all media items in a user's Google Photos library. If filters are specified, this call will return all media items in the user's library that fulfill the filter criteria. Filters and album id must not both be set, as this will result in an invalid request."
    },
    "LatLng": {
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
      "type": "object",
      "id": "LatLng",
      "properties": {
        "longitude": {
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double",
          "type": "number"
        },
        "latitude": {
          "format": "double",
          "type": "number",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0]."
        }
      }
    },
    "MapEnrichment": {
      "properties": {
        "destination": {
          "$ref": "Location",
          "description": "Destination location for this enrichemt item."
        },
        "origin": {
          "$ref": "Location",
          "description": "Origin location for this enrichment item."
        }
      },
      "description": "An enrichment containing a map, showing origin and destination locations.",
      "type": "object",
      "id": "MapEnrichment"
    },
    "Filters": {
      "id": "Filters",
      "type": "object",
      "properties": {
        "featureFilter": {
          "$ref": "FeatureFilter",
          "description": "Filters the media items based on their features."
        },
        "mediaTypeFilter": {
          "$ref": "MediaTypeFilter",
          "description": "Filters the media items based on the type of media."
        },
        "dateFilter": {
          "description": "Filters the media items based on their creation date.",
          "$ref": "DateFilter"
        },
        "includeArchivedMedia": {
          "type": "boolean",
          "description": "If set, the results include media items that the user has archived. Defaults to false (archived media items aren't included)."
        },
        "excludeNonAppCreatedData": {
          "type": "boolean",
          "description": "If set, the results exclude media items that were not created by this app. Defaults to false (all media items are returned). This field is ignored if the photoslibrary.readonly.appcreateddata scope is used."
        },
        "contentFilter": {
          "description": "Filters the media items based on their content.",
          "$ref": "ContentFilter"
        }
      },
      "description": "Filters that can be applied to a media item search. If multiple filter options are specified, they're treated as AND with each other."
    },
    "ShareAlbumResponse": {
      "type": "object",
      "id": "ShareAlbumResponse",
      "properties": {
        "shareInfo": {
          "$ref": "ShareInfo",
          "description": "Output only. Information about the shared album."
        }
      },
      "description": "Response to successfully sharing an album."
    },
    "JoinSharedAlbumResponse": {
      "id": "JoinSharedAlbumResponse",
      "properties": {
        "album": {
          "description": "Shared album that the user has joined.",
          "$ref": "Album"
        }
      },
      "description": "Response to successfully joining the shared album on behalf of the user.",
      "type": "object"
    },
    "ContributorInfo": {
      "properties": {
        "profilePictureBaseUrl": {
          "description": "URL to the profile picture of the contributor.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the contributor.",
          "type": "string"
        }
      },
      "description": "Information about the user who added the media item. Note that this information is included only if the media item is within a shared album created by your app and you have the sharing scope.",
      "id": "ContributorInfo",
      "type": "object"
    },
    "ShareAlbumRequest": {
      "properties": {
        "sharedAlbumOptions": {
          "description": "Options to be set when converting the album to a shared album.",
          "$ref": "SharedAlbumOptions"
        }
      },
      "description": "Request to make an album shared in Google Photos.",
      "type": "object",
      "id": "ShareAlbumRequest"
    },
    "BatchCreateMediaItemsResponse": {
      "description": "List of media items created.",
      "type": "object",
      "properties": {
        "newMediaItemResults": {
          "type": "array",
          "items": {
            "$ref": "NewMediaItemResult"
          },
          "description": "Output only. List of media items created."
        }
      },
      "id": "BatchCreateMediaItemsResponse"
    },
    "FeatureFilter": {
      "description": "This filter defines the features that the media items should have.",
      "type": "object",
      "properties": {
        "includedFeatures": {
          "items": {
            "enumDescriptions": [
              "Treated as if no filters are applied. All features are included.",
              "Media items that the user has marked as favorites in the Google Photos app."
            ],
            "enum": ["NONE", "FAVORITES"],
            "type": "string"
          },
          "type": "array",
          "description": "The set of features to be included in the media item search results. The items in the set are ORed and may match any of the specified features."
        }
      },
      "id": "FeatureFilter"
    },
    "MediaMetadata": {
      "id": "MediaMetadata",
      "description": "Metadata for a media item.",
      "type": "object",
      "properties": {
        "width": {
          "format": "int64",
          "description": "Original width (in pixels) of the media item.",
          "type": "string"
        },
        "photo": {
          "$ref": "Photo",
          "description": "Metadata for a photo media type."
        },
        "video": {
          "$ref": "Video",
          "description": "Metadata for a video media type."
        },
        "height": {
          "format": "int64",
          "description": "Original height (in pixels) of the media item.",
          "type": "string"
        },
        "creationTime": {
          "format": "google-datetime",
          "description": "Time when the media item was first created (not when it was uploaded to Google Photos).",
          "type": "string"
        }
      }
    },
    "SimpleMediaItem": {
      "id": "SimpleMediaItem",
      "description": "A simple media item to be created in Google Photos via an upload token.",
      "type": "object",
      "properties": {
        "uploadToken": {
          "type": "string",
          "description": "Token identifying the media bytes that have been uploaded to Google."
        },
        "fileName": {
          "description": "File name with extension of the media item. This is shown to the user in Google Photos. The file name specified during the byte upload process is ignored if this field is set. The file name, including the file extension, shouldn't be more than 255 characters. This is an optional field.",
          "type": "string"
        }
      }
    },
    "AlbumPosition": {
      "description": "Specifies a position in an album.",
      "id": "AlbumPosition",
      "properties": {
        "relativeEnrichmentItemId": {
          "description": "The enrichment item to which the position is relative to. Only used when position type is AFTER_ENRICHMENT_ITEM.",
          "type": "string"
        },
        "relativeMediaItemId": {
          "description": "The media item to which the position is relative to. Only used when position type is AFTER_MEDIA_ITEM.",
          "type": "string"
        },
        "position": {
          "enumDescriptions": [
            "Default value if this enum isn't set.",
            "At the beginning of the album.",
            "At the end of the album.",
            "After a media item.",
            "After an enrichment item."
          ],
          "description": "Type of position, for a media or enrichment item.",
          "enum": [
            "POSITION_TYPE_UNSPECIFIED",
            "FIRST_IN_ALBUM",
            "LAST_IN_ALBUM",
            "AFTER_MEDIA_ITEM",
            "AFTER_ENRICHMENT_ITEM"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "NewEnrichmentItem": {
      "type": "object",
      "id": "NewEnrichmentItem",
      "properties": {
        "locationEnrichment": {
          "description": "Location to be added to the album.",
          "$ref": "LocationEnrichment"
        },
        "textEnrichment": {
          "$ref": "TextEnrichment",
          "description": "Text to be added to the album."
        },
        "mapEnrichment": {
          "description": "Map to be added to the album.",
          "$ref": "MapEnrichment"
        }
      },
      "description": "A new enrichment item to be added to an album, used by the `albums.addEnrichment` call."
    },
    "BatchCreateMediaItemsRequest": {
      "properties": {
        "albumPosition": {
          "$ref": "AlbumPosition",
          "description": "Position in the album where the media items are added. If not specified, the media items are added to the end of the album (as per the default value, that is, `LAST_IN_ALBUM`). The request fails if this field is set and the `albumId` is not specified. The request will also fail if you set the field and are not the owner of the shared album."
        },
        "albumId": {
          "description": "Identifier of the album where the media items are added. The media items are also added to the user's library. This is an optional field.",
          "type": "string"
        },
        "newMediaItems": {
          "items": {
            "$ref": "NewMediaItem"
          },
          "type": "array",
          "description": "Required. List of media items to be created. Maximum 50 media items per call."
        }
      },
      "id": "BatchCreateMediaItemsRequest",
      "type": "object",
      "description": "Request to create one or more media items in a user's Google Photos library. If an `albumid` is specified, the media items are also added to that album. `albumPosition` is optional and can only be specified if an `albumId` is set."
    },
    "LocationEnrichment": {
      "type": "object",
      "description": "An enrichment containing a single location.",
      "id": "LocationEnrichment",
      "properties": {
        "location": {
          "description": "Location for this enrichment item.",
          "$ref": "Location"
        }
      }
    },
    "ListSharedAlbumsResponse": {
      "description": "List of shared albums requested.",
      "id": "ListSharedAlbumsResponse",
      "properties": {
        "sharedAlbums": {
          "description": "Output only. List of shared albums.",
          "type": "array",
          "items": {
            "$ref": "Album"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Output only. Token to use to get the next set of shared albums. Populated if there are more shared albums to retrieve for this request."
        }
      },
      "type": "object"
    },
    "NewMediaItem": {
      "properties": {
        "simpleMediaItem": {
          "description": "A new media item that has been uploaded via the included `uploadToken`.",
          "$ref": "SimpleMediaItem"
        },
        "description": {
          "type": "string",
          "description": "Description of the media item. This is shown to the user in the item's info section in the Google Photos app. Must be shorter than 1000 characters. Only include text written by users. Descriptions should add context and help users understand media. Do not include any auto-generated strings such as filenames, tags, and other metadata."
        }
      },
      "id": "NewMediaItem",
      "description": "New media item that's created in a user's Google Photos account.",
      "type": "object"
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole calendar date. Set `day` to 0 when only the month and year are significant, for example, all of December 2018. Set `day` and `month` to 0 if only the year is significant, for example, the entire of 2018. Set `year` to 0 when only the day and month are significant, for example, an anniversary or birthday. Unsupported: Setting all values to 0, only `month` to 0, or both `day` and `year` to 0 at the same time.",
      "type": "object",
      "properties": {
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "format": "int32",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year/month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        }
      }
    },
    "BatchAddMediaItemsToAlbumResponse": {
      "properties": {},
      "type": "object",
      "description": "Response for adding media items to an album.",
      "id": "BatchAddMediaItemsToAlbumResponse"
    },
    "CreateAlbumRequest": {
      "type": "object",
      "properties": {
        "album": {
          "description": "Required. The album to be created.",
          "$ref": "Album"
        }
      },
      "description": "Request to create an album in Google Photos.",
      "id": "CreateAlbumRequest"
    },
    "SharedAlbumOptions": {
      "id": "SharedAlbumOptions",
      "properties": {
        "isCollaborative": {
          "type": "boolean",
          "description": "True if the shared album allows collaborators (users who have joined the album) to add media items to it. Defaults to false."
        },
        "isCommentable": {
          "type": "boolean",
          "description": "True if the shared album allows collaborators (users who have joined the album) to add comments to the album. Defaults to false."
        }
      },
      "type": "object",
      "description": "Options that control the sharing of an album."
    },
    "ListMediaItemsResponse": {
      "description": "List of all media items from the user's Google Photos library.",
      "properties": {
        "nextPageToken": {
          "description": "Output only. Token to use to get the next set of media items. Its presence is the only reliable indicator of more media items being available in the next request.",
          "type": "string"
        },
        "mediaItems": {
          "items": {
            "$ref": "MediaItem"
          },
          "type": "array",
          "description": "Output only. List of media items in the user's library."
        }
      },
      "id": "ListMediaItemsResponse",
      "type": "object"
    },
    "BatchAddMediaItemsToAlbumRequest": {
      "description": "Request to add media items to an album.",
      "id": "BatchAddMediaItemsToAlbumRequest",
      "properties": {
        "mediaItemIds": {
          "description": "Required. Identifiers of the MediaItems to be added. The maximum number of media items that can be added in one call is 50.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Photo": {
      "id": "Photo",
      "type": "object",
      "description": "Metadata that is specific to a photo, such as, ISO, focal length and exposure time. Some of these fields may be null or not included.",
      "properties": {
        "cameraModel": {
          "description": "Model of the camera with which the photo was taken.",
          "type": "string"
        },
        "cameraMake": {
          "type": "string",
          "description": "Brand of the camera with which the photo was taken."
        },
        "focalLength": {
          "type": "number",
          "description": "Focal length of the camera lens with which the photo was taken.",
          "format": "float"
        },
        "apertureFNumber": {
          "type": "number",
          "description": "Aperture f number of the camera lens with which the photo was taken.",
          "format": "float"
        },
        "exposureTime": {
          "format": "google-duration",
          "description": "Exposure time of the camera aperture when the photo was taken.",
          "type": "string"
        },
        "isoEquivalent": {
          "format": "int32",
          "description": "ISO of the camera with which the photo was taken.",
          "type": "integer"
        }
      }
    },
    "MediaTypeFilter": {
      "description": "This filter defines the type of media items to be returned, for example, videos or photos. Only one media type is supported.",
      "type": "object",
      "id": "MediaTypeFilter",
      "properties": {
        "mediaTypes": {
          "description": "The types of media items to be included. This field should be populated with only one media type. If you specify multiple media types, it results in an error.",
          "items": {
            "enum": ["ALL_MEDIA", "VIDEO", "PHOTO"],
            "type": "string",
            "enumDescriptions": [
              "Treated as if no filters are applied. All media types are included.",
              "All media items that are considered videos. This also includes movies the user has created using the Google Photos app.",
              "All media items that are considered photos. This includes .bmp, .gif, .ico, .jpg (and other spellings), .tiff, .webp and special photo types such as iOS live photos, Android motion photos, panoramas, photospheres."
            ]
          },
          "type": "array"
        }
      }
    },
    "JoinSharedAlbumRequest": {
      "type": "object",
      "properties": {
        "shareToken": {
          "type": "string",
          "description": "Required. Token to join the shared album on behalf of the user."
        }
      },
      "description": "Request to join a shared album on behalf of the user. This uses a shareToken which can be acquired via the shareAlbum or listSharedAlbums calls.",
      "id": "JoinSharedAlbumRequest"
    },
    "AddEnrichmentToAlbumRequest": {
      "properties": {
        "newEnrichmentItem": {
          "$ref": "NewEnrichmentItem",
          "description": "Required. The enrichment to be added."
        },
        "albumPosition": {
          "description": "Required. The position in the album where the enrichment is to be inserted.",
          "$ref": "AlbumPosition"
        }
      },
      "type": "object",
      "id": "AddEnrichmentToAlbumRequest",
      "description": "Request to add an enrichment to a specific album at a specific position."
    },
    "ListAlbumsResponse": {
      "description": "List of albums requested.",
      "id": "ListAlbumsResponse",
      "properties": {
        "albums": {
          "description": "Output only. List of albums shown in the Albums tab of the user's Google Photos app.",
          "type": "array",
          "items": {
            "$ref": "Album"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Output only. Token to use to get the next set of albums. Populated if there are more albums to retrieve for this request."
        }
      },
      "type": "object"
    },
    "ContentFilter": {
      "properties": {
        "excludedContentCategories": {
          "description": "The set of categories which are not to be included in the media item search results. The items in the set are ORed. There's a maximum of 10 `excludedContentCategories` per request.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default content category. This category is ignored when any other category is used in the filter.",
              "Media items containing landscapes.",
              "Media items containing receipts.",
              "Media items containing cityscapes.",
              "Media items containing landmarks.",
              "Media items that are selfies.",
              "Media items containing people.",
              "Media items containing pets.",
              "Media items from weddings.",
              "Media items from birthdays.",
              "Media items containing documents.",
              "Media items taken during travel.",
              "Media items containing animals.",
              "Media items containing food.",
              "Media items from sporting events.",
              "Media items taken at night.",
              "Media items from performances.",
              "Media items containing whiteboards.",
              "Media items that are screenshots.",
              "Media items that are considered to be utility. These include, but aren't limited to documents, screenshots, whiteboards etc.",
              "Media items containing art.",
              "Media items containing crafts.",
              "Media items related to fashion.",
              "Media items containing houses.",
              "Media items containing gardens.",
              "Media items containing flowers.",
              "Media items taken of holidays."
            ],
            "enum": [
              "NONE",
              "LANDSCAPES",
              "RECEIPTS",
              "CITYSCAPES",
              "LANDMARKS",
              "SELFIES",
              "PEOPLE",
              "PETS",
              "WEDDINGS",
              "BIRTHDAYS",
              "DOCUMENTS",
              "TRAVEL",
              "ANIMALS",
              "FOOD",
              "SPORT",
              "NIGHT",
              "PERFORMANCES",
              "WHITEBOARDS",
              "SCREENSHOTS",
              "UTILITY",
              "ARTS",
              "CRAFTS",
              "FASHION",
              "HOUSES",
              "GARDENS",
              "FLOWERS",
              "HOLIDAYS"
            ]
          },
          "type": "array"
        },
        "includedContentCategories": {
          "description": "The set of categories to be included in the media item search results. The items in the set are ORed. There's a maximum of 10 `includedContentCategories` per request.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Default content category. This category is ignored when any other category is used in the filter.",
              "Media items containing landscapes.",
              "Media items containing receipts.",
              "Media items containing cityscapes.",
              "Media items containing landmarks.",
              "Media items that are selfies.",
              "Media items containing people.",
              "Media items containing pets.",
              "Media items from weddings.",
              "Media items from birthdays.",
              "Media items containing documents.",
              "Media items taken during travel.",
              "Media items containing animals.",
              "Media items containing food.",
              "Media items from sporting events.",
              "Media items taken at night.",
              "Media items from performances.",
              "Media items containing whiteboards.",
              "Media items that are screenshots.",
              "Media items that are considered to be utility. These include, but aren't limited to documents, screenshots, whiteboards etc.",
              "Media items containing art.",
              "Media items containing crafts.",
              "Media items related to fashion.",
              "Media items containing houses.",
              "Media items containing gardens.",
              "Media items containing flowers.",
              "Media items taken of holidays."
            ],
            "type": "string",
            "enum": [
              "NONE",
              "LANDSCAPES",
              "RECEIPTS",
              "CITYSCAPES",
              "LANDMARKS",
              "SELFIES",
              "PEOPLE",
              "PETS",
              "WEDDINGS",
              "BIRTHDAYS",
              "DOCUMENTS",
              "TRAVEL",
              "ANIMALS",
              "FOOD",
              "SPORT",
              "NIGHT",
              "PERFORMANCES",
              "WHITEBOARDS",
              "SCREENSHOTS",
              "UTILITY",
              "ARTS",
              "CRAFTS",
              "FASHION",
              "HOUSES",
              "GARDENS",
              "FLOWERS",
              "HOLIDAYS"
            ]
          }
        }
      },
      "type": "object",
      "description": "This filter allows you to return media items based on the content type. It's possible to specify a list of categories to include, and/or a list of categories to exclude. Within each list, the categories are combined with an OR. The content filter `includedContentCategories`: [c1, c2, c3] would get media items that contain (c1 OR c2 OR c3). The content filter `excludedContentCategories`: [c1, c2, c3] would NOT get media items that contain (c1 OR c2 OR c3). You can also include some categories while excluding others, as in this example: `includedContentCategories`: [c1, c2], `excludedContentCategories`: [c3, c4] The previous example would get media items that contain (c1 OR c2) AND NOT (c3 OR c4). A category that appears in `includedContentategories` must not appear in `excludedContentCategories`.",
      "id": "ContentFilter"
    },
    "LeaveSharedAlbumResponse": {
      "type": "object",
      "id": "LeaveSharedAlbumResponse",
      "properties": {},
      "description": "Response to successfully leaving the shared album on behalf of the user."
    },
    "DateFilter": {
      "properties": {
        "ranges": {
          "type": "array",
          "description": "List of dates ranges that match the media items' creation date. A maximum of 5 dates ranges can be included per request.",
          "items": {
            "$ref": "DateRange"
          }
        },
        "dates": {
          "type": "array",
          "description": "List of dates that match the media items' creation date. A maximum of 5 dates can be included per request.",
          "items": {
            "$ref": "Date"
          }
        }
      },
      "description": "This filter defines the allowed dates or date ranges for the media returned. It's possible to pick a set of specific dates and a set of date ranges. Media items uploaded without metadata specifying the date the media item was captured will not be returned in queries using date filters. Google Photos server upload time is not used as a fallback in this case.",
      "type": "object",
      "id": "DateFilter"
    },
    "UnshareAlbumResponse": {
      "properties": {},
      "id": "UnshareAlbumResponse",
      "type": "object",
      "description": "Response of a successful unshare of a shared album."
    },
    "MediaItem": {
      "properties": {
        "id": {
          "description": "Identifier for the media item. This is a persistent identifier that can be used between sessions to identify this media item.",
          "type": "string"
        },
        "contributorInfo": {
          "$ref": "ContributorInfo",
          "description": "Information about the user who added this media item. Note that this is only included when using mediaItems.search with the ID of a shared album. The album must be created by your app and you must have the sharing scope."
        },
        "mimeType": {
          "type": "string",
          "description": "MIME type of the media item. For example, `image/jpeg`."
        },
        "productUrl": {
          "description": "Google Photos URL for the media item. This link is available to the user only if they're signed in. When retrieved from an album search, the URL points to the item inside the album.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the media item. This is shown to the user in the item's info section in the Google Photos app. Must be shorter than 1000 characters. Only include text written by users. Descriptions should add context and help users understand media. Do not include any auto-generated strings such as filenames, tags, and other metadata."
        },
        "filename": {
          "type": "string",
          "description": "Filename of the media item. This is shown to the user in the item's info section in the Google Photos app."
        },
        "baseUrl": {
          "description": "A URL to the media item's bytes. This shouldn't be used as is. Parameters should be appended to this URL before use. See the [developer documentation](https://developers.google.com/photos/library/guides/access-media-items#base-urls) for a complete list of supported parameters. For example, `'=w2048-h1024'` will set the dimensions of a media item of type photo to have a width of 2048 px and height of 1024 px.",
          "type": "string"
        },
        "mediaMetadata": {
          "description": "Metadata related to the media item, such as, height, width, or creation time.",
          "$ref": "MediaMetadata"
        }
      },
      "description": "Representation of a media item (such as a photo or video) in Google Photos.",
      "id": "MediaItem",
      "type": "object"
    },
    "DateRange": {
      "id": "DateRange",
      "properties": {
        "endDate": {
          "description": "The end date (included as part of the range). It must be specified in the same format as the start date.",
          "$ref": "Date"
        },
        "startDate": {
          "description": "The start date (included as part of the range) in one of the formats described.",
          "$ref": "Date"
        }
      },
      "description": "Defines a range of dates. Both dates must be of the same format. For more information, see Date.",
      "type": "object"
    },
    "BatchGetMediaItemsResponse": {
      "id": "BatchGetMediaItemsResponse",
      "description": "Response to retrieve a list of media items.",
      "type": "object",
      "properties": {
        "mediaItemResults": {
          "items": {
            "$ref": "MediaItemResult"
          },
          "type": "array",
          "description": "Output only. List of media items retrieved. Note that even if the call to BatchGetMediaItems succeeds, there may have been failures for some media items in the batch. These failures are indicated in each MediaItemResult.status."
        }
      }
    },
    "UnshareAlbumRequest": {
      "type": "object",
      "properties": {},
      "id": "UnshareAlbumRequest",
      "description": "Request to unshare a shared album in Google Photos."
    },
    "Location": {
      "type": "object",
      "description": "Represents a physical location.",
      "id": "Location",
      "properties": {
        "latlng": {
          "$ref": "LatLng",
          "description": "Position of the location on the map."
        },
        "locationName": {
          "description": "Name of the location to be displayed.",
          "type": "string"
        }
      }
    },
    "LeaveSharedAlbumRequest": {
      "type": "object",
      "properties": {
        "shareToken": {
          "description": "Required. Token to leave the shared album on behalf of the user.",
          "type": "string"
        }
      },
      "id": "LeaveSharedAlbumRequest",
      "description": "Request to leave a shared album on behalf of the user. This uses a shareToken which can be acquired via the or listSharedAlbums or getAlbum calls."
    },
    "TextEnrichment": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Text for this enrichment item.",
          "type": "string"
        }
      },
      "id": "TextEnrichment",
      "description": "An enrichment containing text."
    },
    "AddEnrichmentToAlbumResponse": {
      "properties": {
        "enrichmentItem": {
          "$ref": "EnrichmentItem",
          "description": "Output only. Enrichment which was added."
        }
      },
      "description": "The enrichment item that's created.",
      "id": "AddEnrichmentToAlbumResponse",
      "type": "object"
    },
    "ShareInfo": {
      "type": "object",
      "description": "Information about albums that are shared. This information is only included if you created the album, it is shared and you have the sharing scope.",
      "id": "ShareInfo",
      "properties": {
        "sharedAlbumOptions": {
          "$ref": "SharedAlbumOptions",
          "description": "Options that control whether someone can add media items to, or comment on a shared album."
        },
        "shareableUrl": {
          "description": "A link to the shared Google Photos album. Anyone with the link can view the contents of the album, so it should be treated with care. The `shareableUrl` parameter is only returned if the album has link sharing turned on. If a user is already joined to an album that isn't link-shared, they can use the album's [`productUrl`](https://developers.google.com/photos/library/reference/rest/v1/albums#Album) to access it instead. A `shareableUrl` is invalidated if the owner turns off link sharing in the Google Photos app, or if the album is unshared.",
          "type": "string"
        },
        "isJoinable": {
          "type": "boolean",
          "description": "True if the album can be joined by users."
        },
        "shareToken": {
          "type": "string",
          "description": "A token that is used to join, leave, or retrieve the details of a shared album on behalf of a user who isn't the owner. A `shareToken` is invalidated if the owner turns off link sharing in the Google Photos app, or if the album is unshared."
        },
        "isJoined": {
          "type": "boolean",
          "description": "True if the user is joined to the album. This is always true for the owner of the album."
        },
        "isOwned": {
          "type": "boolean",
          "description": "True if the user owns the album."
        }
      }
    },
    "Video": {
      "properties": {
        "cameraMake": {
          "type": "string",
          "description": "Brand of the camera with which the video was taken."
        },
        "status": {
          "enumDescriptions": [
            "Video processing status is unknown.",
            "Video is being processed. The user sees an icon for this video in the Google Photos app; however, it isn't playable yet.",
            "Video processing is complete and it is now ready for viewing. Important: attempting to download a video not in the READY state may fail.",
            "Something has gone wrong and the video has failed to process."
          ],
          "description": "Processing status of the video.",
          "enum": ["UNSPECIFIED", "PROCESSING", "READY", "FAILED"],
          "type": "string"
        },
        "cameraModel": {
          "type": "string",
          "description": "Model of the camera with which the video was taken."
        },
        "fps": {
          "description": "Frame rate of the video.",
          "type": "number",
          "format": "double"
        }
      },
      "description": "Metadata that is specific to a video, for example, fps and processing status. Some of these fields may be null or not included.",
      "id": "Video",
      "type": "object"
    },
    "SearchMediaItemsResponse": {
      "properties": {
        "mediaItems": {
          "type": "array",
          "items": {
            "$ref": "MediaItem"
          },
          "description": "Output only. List of media items that match the search parameters."
        },
        "nextPageToken": {
          "description": "Output only. Use this token to get the next set of media items. Its presence is the only reliable indicator of more media items being available in the next request.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SearchMediaItemsResponse",
      "description": "List of media items that match the search parameters."
    },
    "EnrichmentItem": {
      "type": "object",
      "id": "EnrichmentItem",
      "description": "An enrichment item.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the enrichment item."
        }
      }
    }
  },
  "servicePath": "",
  "rootUrl": "https://photoslibrary.googleapis.com/",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "id": "photoslibrary:v1",
  "documentationLink": "https://developers.google.com/photos/",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "title": "Photos Library API",
  "resources": {
    "albums": {
      "methods": {
        "batchAddMediaItems": {
          "parameters": {
            "albumId": {
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "description": "Required. Identifier of the Album that the media items are added to.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "BatchAddMediaItemsToAlbumRequest"
          },
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Adds one or more media items in a user's Google Photos library to an album. The media items and albums must have been created by the developer via the API. Media items are added to the end of the album. If multiple media items are given, they are added in the order specified in this call. Each album can contain up to 20,000 media items. Only media items that are in the user's library can be added to an album. For albums that are shared, the album must either be owned by the user or the user must have joined the album as a collaborator. Partial success is not supported. The entire request will fail if an invalid media item or album is specified.",
          "parameterOrder": ["albumId"],
          "id": "photoslibrary.albums.batchAddMediaItems",
          "path": "v1/albums/{+albumId}:batchAddMediaItems",
          "flatPath": "v1/albums/{albumsId}:batchAddMediaItems",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.appendonly",
            "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata",
            "https://www.googleapis.com/auth/photoslibrary.sharing"
          ],
          "response": {
            "$ref": "BatchAddMediaItemsToAlbumResponse"
          }
        },
        "list": {
          "id": "photoslibrary.albums.list",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "flatPath": "v1/albums",
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Lists all albums shown to a user in the Albums tab of the Google Photos app.",
          "path": "v1/albums",
          "httpMethod": "GET",
          "parameterOrder": [],
          "response": {
            "$ref": "ListAlbumsResponse"
          },
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listAlbums` request."
            },
            "pageSize": {
              "format": "int32",
              "description": "Maximum number of albums to return in the response. Fewer albums might be returned than the specified number. The default `pageSize` is 20, the maximum is 50.",
              "location": "query",
              "type": "integer"
            },
            "excludeNonAppCreatedData": {
              "description": "If set, the results exclude media items that were not created by this app. Defaults to false (all albums are returned). This field is ignored if the photoslibrary.readonly.appcreateddata scope is used.",
              "type": "boolean",
              "location": "query"
            }
          }
        },
        "share": {
          "request": {
            "$ref": "ShareAlbumRequest"
          },
          "httpMethod": "POST",
          "id": "photoslibrary.albums.share",
          "response": {
            "$ref": "ShareAlbumResponse"
          },
          "path": "v1/albums/{+albumId}:share",
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Marks an album as shared and accessible to other users. This action can only be performed on albums which were created by the developer via the API.",
          "parameters": {
            "albumId": {
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^[^/]+$",
              "description": "Required. Identifier of the album to be shared. This `albumId` must belong to an album created by the developer."
            }
          },
          "scopes": ["https://www.googleapis.com/auth/photoslibrary.sharing"],
          "flatPath": "v1/albums/{albumsId}:share",
          "parameterOrder": ["albumId"]
        },
        "unshare": {
          "path": "v1/albums/{+albumId}:unshare",
          "flatPath": "v1/albums/{albumsId}:unshare",
          "httpMethod": "POST",
          "request": {
            "$ref": "UnshareAlbumRequest"
          },
          "id": "photoslibrary.albums.unshare",
          "scopes": ["https://www.googleapis.com/auth/photoslibrary.sharing"],
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Marks a previously shared album as private. This means that the album is no longer shared and all the non-owners will lose access to the album. All non-owner content will be removed from the album. If a non-owner has previously added the album to their library, they will retain all photos in their library. This action can only be performed on albums which were created by the developer via the API.",
          "parameterOrder": ["albumId"],
          "parameters": {
            "albumId": {
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Required. Identifier of the album to be unshared. This album id must belong to an album created by the developer.",
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "UnshareAlbumResponse"
          }
        },
        "batchRemoveMediaItems": {
          "parameterOrder": ["albumId"],
          "httpMethod": "POST",
          "flatPath": "v1/albums/{albumsId}:batchRemoveMediaItems",
          "id": "photoslibrary.albums.batchRemoveMediaItems",
          "response": {
            "$ref": "BatchRemoveMediaItemsFromAlbumResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata"
          ],
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Removes one or more media items from a specified album. The media items and the album must have been created by the developer via the API. For albums that are shared, this action is only supported for media items that were added to the album by this user, or for all media items if the album was created by this user. Partial success is not supported. The entire request will fail and no action will be performed on the album if an invalid media item or album is specified.",
          "path": "v1/albums/{+albumId}:batchRemoveMediaItems",
          "request": {
            "$ref": "BatchRemoveMediaItemsFromAlbumRequest"
          },
          "parameters": {
            "albumId": {
              "description": "Required. Identifier of the Album that the media items are to be removed from.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "location": "path"
            }
          }
        },
        "addEnrichment": {
          "request": {
            "$ref": "AddEnrichmentToAlbumRequest"
          },
          "flatPath": "v1/albums/{albumsId}:addEnrichment",
          "response": {
            "$ref": "AddEnrichmentToAlbumResponse"
          },
          "httpMethod": "POST",
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Adds an enrichment at a specified position in a defined album.",
          "id": "photoslibrary.albums.addEnrichment",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.appendonly",
            "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata",
            "https://www.googleapis.com/auth/photoslibrary.sharing"
          ],
          "parameters": {
            "albumId": {
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$",
              "description": "Required. Identifier of the album where the enrichment is to be added.",
              "location": "path"
            }
          },
          "parameterOrder": ["albumId"],
          "path": "v1/albums/{+albumId}:addEnrichment"
        },
        "get": {
          "parameters": {
            "albumId": {
              "required": true,
              "description": "Required. Identifier of the album to be requested.",
              "location": "path",
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "httpMethod": "GET",
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Returns the album based on the specified `albumId`. The `albumId` must be the ID of an album owned by the user or a shared album that the user has joined.",
          "flatPath": "v1/albums/{albumsId}",
          "response": {
            "$ref": "Album"
          },
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "path": "v1/albums/{+albumId}",
          "id": "photoslibrary.albums.get",
          "parameterOrder": ["albumId"]
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata"
          ],
          "flatPath": "v1/albums/{albumsId}",
          "httpMethod": "PATCH",
          "id": "photoslibrary.albums.patch",
          "parameterOrder": ["id"],
          "response": {
            "$ref": "Album"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "Required. Indicate what fields in the provided album to update. The only valid values are `title` and `cover_photo_media_item_id`.",
              "format": "google-fieldmask",
              "type": "string"
            },
            "id": {
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Identifier for the album. This is a persistent identifier that can be used between sessions to identify this album.",
              "location": "path"
            }
          },
          "description": "Update the album with the specified `id`. Only the `id`, `title` and `cover_photo_media_item_id` fields of the album are read. The album must have been created by the developer via the API and must be owned by the user.",
          "request": {
            "$ref": "Album"
          },
          "path": "v1/albums/{+id}"
        },
        "create": {
          "flatPath": "v1/albums",
          "request": {
            "$ref": "CreateAlbumRequest"
          },
          "id": "photoslibrary.albums.create",
          "httpMethod": "POST",
          "path": "v1/albums",
          "parameterOrder": [],
          "response": {
            "$ref": "Album"
          },
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Creates an album in a user's Google Photos library.",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.appendonly",
            "https://www.googleapis.com/auth/photoslibrary.sharing"
          ]
        }
      }
    },
    "sharedAlbums": {
      "methods": {
        "list": {
          "flatPath": "v1/sharedAlbums",
          "parameterOrder": [],
          "response": {
            "$ref": "ListSharedAlbumsResponse"
          },
          "parameters": {
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "description": "Maximum number of albums to return in the response. Fewer albums might be returned than the specified number. The default `pageSize` is 20, the maximum is 50.",
              "location": "query"
            },
            "excludeNonAppCreatedData": {
              "type": "boolean",
              "location": "query",
              "description": "If set, the results exclude media items that were not created by this app. Defaults to false (all albums are returned). This field is ignored if the photoslibrary.readonly.appcreateddata scope is used."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listSharedAlbums` request."
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Lists all shared albums available in the Sharing tab of the user's Google Photos app.",
          "path": "v1/sharedAlbums",
          "id": "photoslibrary.sharedAlbums.list"
        },
        "join": {
          "httpMethod": "POST",
          "path": "v1/sharedAlbums:join",
          "scopes": ["https://www.googleapis.com/auth/photoslibrary.sharing"],
          "parameters": {},
          "request": {
            "$ref": "JoinSharedAlbumRequest"
          },
          "id": "photoslibrary.sharedAlbums.join",
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Joins a shared album on behalf of the Google Photos user.",
          "flatPath": "v1/sharedAlbums:join",
          "response": {
            "$ref": "JoinSharedAlbumResponse"
          },
          "parameterOrder": []
        },
        "leave": {
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Leaves a previously-joined shared album on behalf of the Google Photos user. The user must not own this album.",
          "scopes": ["https://www.googleapis.com/auth/photoslibrary.sharing"],
          "httpMethod": "POST",
          "id": "photoslibrary.sharedAlbums.leave",
          "parameters": {},
          "response": {
            "$ref": "LeaveSharedAlbumResponse"
          },
          "flatPath": "v1/sharedAlbums:leave",
          "path": "v1/sharedAlbums:leave",
          "parameterOrder": [],
          "request": {
            "$ref": "LeaveSharedAlbumRequest"
          }
        },
        "get": {
          "flatPath": "v1/sharedAlbums/{sharedAlbumsId}",
          "parameters": {
            "shareToken": {
              "description": "Required. Share token of the album to be requested.",
              "pattern": "^[^/]+$",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "v1/sharedAlbums/{+shareToken}",
          "httpMethod": "GET",
          "response": {
            "$ref": "Album"
          },
          "parameterOrder": ["shareToken"],
          "id": "photoslibrary.sharedAlbums.get",
          "description": "*Beginning March 31, 2025, this method will no longer work. Some or all of the scopes previously used for this method are being removed. Please see Photos APIs updates for more details.* Returns the album based on the specified `shareToken`.",
          "scopes": ["https://www.googleapis.com/auth/photoslibrary.sharing"]
        }
      }
    },
    "mediaItems": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "httpMethod": "GET",
          "flatPath": "v1/mediaItems/{mediaItemsId}",
          "parameters": {
            "mediaItemId": {
              "type": "string",
              "pattern": "^[^/]+$",
              "required": true,
              "location": "path",
              "description": "Required. Identifier of the media item to be requested."
            }
          },
          "path": "v1/mediaItems/{+mediaItemId}",
          "id": "photoslibrary.mediaItems.get",
          "response": {
            "$ref": "MediaItem"
          },
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Returns the media item for the specified media item identifier.",
          "parameterOrder": ["mediaItemId"]
        },
        "list": {
          "parameterOrder": [],
          "flatPath": "v1/mediaItems",
          "parameters": {
            "pageSize": {
              "description": "Maximum number of media items to return in the response. Fewer media items might be returned than the specified number. The default `pageSize` is 25, the maximum is 100.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "description": "A continuation token to get the next page of the results. Adding this to the request returns the rows after the `pageToken`. The `pageToken` should be the value returned in the `nextPageToken` parameter in the response to the `listMediaItems` request.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ListMediaItemsResponse"
          },
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* List all media items from a user's Google Photos library.",
          "id": "photoslibrary.mediaItems.list",
          "path": "v1/mediaItems"
        },
        "search": {
          "parameters": {},
          "path": "v1/mediaItems:search",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Searches for media items in a user's Google Photos library. If no filters are set, then all media items in the user's library are returned. If an album is set, all media items in the specified album are returned. If filters are specified, media items that match the filters from the user's library are listed. If you set both the album and the filters, the request results in an error.",
          "id": "photoslibrary.mediaItems.search",
          "parameterOrder": [],
          "flatPath": "v1/mediaItems:search",
          "request": {
            "$ref": "SearchMediaItemsRequest"
          },
          "response": {
            "$ref": "SearchMediaItemsResponse"
          }
        },
        "batchGet": {
          "id": "photoslibrary.mediaItems.batchGet",
          "path": "v1/mediaItems:batchGet",
          "parameterOrder": [],
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Returns the list of media items for the specified media item identifiers. Items are returned in the same order as the supplied identifiers.",
          "parameters": {
            "mediaItemIds": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "description": "Required. Identifiers of the media items to be requested. Must not contain repeated identifiers and cannot be empty. The maximum number of media items that can be retrieved in one call is 50."
            }
          },
          "response": {
            "$ref": "BatchGetMediaItemsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.readonly",
            "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata"
          ],
          "flatPath": "v1/mediaItems:batchGet",
          "httpMethod": "GET"
        },
        "patch": {
          "path": "v1/mediaItems/{+id}",
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata"
          ],
          "parameters": {
            "id": {
              "location": "path",
              "pattern": "^[^/]+$",
              "required": true,
              "description": "Identifier for the media item. This is a persistent identifier that can be used between sessions to identify this media item.",
              "type": "string"
            },
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "type": "string",
              "description": "Required. Indicate what fields in the provided media item to update. The only valid value is `description`."
            }
          },
          "id": "photoslibrary.mediaItems.patch",
          "request": {
            "$ref": "MediaItem"
          },
          "description": "Update the media item with the specified `id`. Only the `id` and `description` fields of the media item are read. The media item must have been created by the developer via the API and must be owned by the user.",
          "parameterOrder": ["id"],
          "flatPath": "v1/mediaItems/{mediaItemsId}",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "MediaItem"
          }
        },
        "batchCreate": {
          "parameters": {},
          "response": {
            "$ref": "BatchCreateMediaItemsResponse"
          },
          "flatPath": "v1/mediaItems:batchCreate",
          "description": "*Some scopes previously used for this method are being removed or changed. Beginning March 31, 2025, functionality will be limited to interacting with media items created by your app. Please see Photos APIs updates for more details.* Creates one or more media items in a user's Google Photos library. This is the second step for creating a media item. For details regarding Step 1, uploading the raw bytes to a Google Server, see Uploading media. This call adds the media item to the library. If an album `id` is specified, the call adds the media item to the album too. Each album can contain up to 20,000 media items. By default, the media item will be added to the end of the library or album. If an album `id` and position are both defined, the media item is added to the album at the specified position. If the call contains multiple media items, they're added at the specified position. If you are creating a media item in a shared album where you are not the owner, you are not allowed to position the media item. Doing so will result in a `BAD REQUEST` error.",
          "httpMethod": "POST",
          "id": "photoslibrary.mediaItems.batchCreate",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/photoslibrary",
            "https://www.googleapis.com/auth/photoslibrary.appendonly",
            "https://www.googleapis.com/auth/photoslibrary.sharing"
          ],
          "request": {
            "$ref": "BatchCreateMediaItemsRequest"
          },
          "path": "v1/mediaItems:batchCreate"
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/photoslibrary.readonly": {
          "description": "View your Google Photos library"
        },
        "https://www.googleapis.com/auth/photoslibrary.sharing": {
          "description": "Manage and add to shared albums on your behalf"
        },
        "https://www.googleapis.com/auth/photoslibrary.readonly.appcreateddata": {
          "description": "Manage photos added by this app"
        },
        "https://www.googleapis.com/auth/photoslibrary.edit.appcreateddata": {
          "description": "Edit the info in your photos, videos, and albums created within this app, including titles, descriptions, and covers"
        },
        "https://www.googleapis.com/auth/photoslibrary.appendonly": {
          "description": "Add to your Google Photos library"
        },
        "https://www.googleapis.com/auth/photoslibrary": {
          "description": "See, upload, and organize items in your Google Photos library"
        }
      }
    }
  },
  "version": "v1",
  "mtlsRootUrl": "https://photoslibrary.mtls.googleapis.com/",
  "canonicalName": "Photos Library",
  "parameters": {
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "enum": ["json", "media", "proto"],
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": ["1", "2"],
      "enumDescriptions": ["v1 error format", "v2 error format"],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "revision": "20241212",
  "basePath": "",
  "name": "photoslibrary",
  "baseUrl": "https://photoslibrary.googleapis.com/"
}
